

@use '@angular/material' as mat;
@include mat.core();
@import '@angular/material/theming';
@include mat-core();

$custom-primary: mat-palette($mat-indigo);
$custom-accent:  mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$custom-warn:    mat-palette($mat-red);

// $dark-theme-background-palette: (
//   status-bar: black,
//   app-bar:    green,
//   background: #750808,
//   hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX
//   card:       grey,
//   dialog:     grey,
//   disabled-button: rgba(white, 0.12),
//   raised-button: grey,
//   focused-button: $light-focused,
//   selected-button: grey,
//   selected-disabled-button: grey,
//   disabled-button-toggle: black,
//   unselected-chip: grey,
//   disabled-list-option: rgba(white, 0.12),
//   tooltip: rgb(131, 35, 35),
// );
// Class
$bg-color-1: rgb(15,15,15);
$bg-color-2: rgb(30,30,30);
:root{
  --bg-color-1: rgb(15,15,15);
  --bg-color-2: rgb(30,30,30);
}
.color-primary{
  color: mat.get-color-from-palette($custom-primary, 500) !important;
}
.fill-primary{
  fill: mat.get-color-from-palette($custom-primary, 500);
}
.bg-primary{
  background-color: mat.get-color-from-palette($custom-primary, 500);
}
.bg-accent{
  background-color: mat.get-color-from-palette($custom-accent, 500);
}
.bg-warn{
  background-color: mat.get-color-from-palette($custom-warn, 500);
}

$custom-theme-light: mat-light-theme((
  color: (
    primary: $custom-primary,
    accent: $custom-accent,
    warn: $custom-warn,  
  )
));
$custom-theme-dark: mat-dark-theme((
  color: (
    primary: $custom-primary,
    accent: $custom-accent,
    warn: $custom-warn,  
  ),
));
@function modify-background($theme, $bg, $bg-light) {
  // Replace the background in the color object's background palette.
  $theme-color: map-get($theme, color);
  $color-background-palette: map-get($theme-color, background);
  $color-background-palette: map-merge($color-background-palette, (background: $bg));
  $color-background-palette: map-merge($color-background-palette, (raised-button: $bg));
  $color-background-palette: map-merge($color-background-palette, (dialog: $bg-light));
  $color-background-palette: map-merge($color-background-palette, (card: $bg-light));

  // Replace the background in the background palette.
  $background-palette: map-get($theme, background);
  $background-palette: map-merge($background-palette, (background: $bg));
  $background-palette: map-merge($background-palette, (raised-button: $bg));
  $background-palette: map-merge($background-palette, (dialog: $bg-light));
  $background-palette: map-merge($background-palette, (card: $bg-light));

  // Merge the changes into a new theme.
  $modified-theme-color: map-merge($theme-color, (background: $color-background-palette));
  $modified-theme: map-merge($theme, (color: $modified-theme-color));
  $modified-theme: map-merge($modified-theme, (background: $background-palette));

  @return $modified-theme;
}
$custom-theme-dark: modify-background($custom-theme-dark, $bg-color-1, $bg-color-2);

@include angular-material-theme($custom-theme-dark);
.light-theme{
  @include angular-material-theme($custom-theme-light);
}

